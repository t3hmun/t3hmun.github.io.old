---
# Files that are not in special directories require these YAML front matter to be processed by Jekyll.
---
// main.scss written by t3hmun (Manish Parekh, t3hmun at gmail dot com)
//
// License:
// 
// Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// http://creativecommons.org/licenses/by-sa/4.0/ 

// This is the main SASS that pull together the whole site style.
// All colours and sizes and fonts must be defined here as variables (except syntax colour).

@charset "utf-8";
// This is our main SASS file that brings together all the scss files to generate a main CSS file. 







/*
 * Define hosted fonts (required for proper rendering of boxart)
 */

@font-face{
    font-family: 'Source Code Pro';
    font-weight: 300;
    font-style: normal;
    font-stretch: normal;
    src: url('fonts/EOT/SourceCodePro-Light.eot') format('embedded-opentype'),
         url('fonts/WOFF2/OTF/SourceCodePro-Light.otf.woff2') format('woff2'),
         url('fonts/WOFF/OTF/SourceCodePro-Light.otf.woff') format('woff'),
         url('fonts/OTF/SourceCodePro-Light.otf') format('opentype'),
         url('fonts/TTF/SourceCodePro-Light.ttf') format('truetype');
}

@font-face{
    font-family: 'Source Code Pro';
    font-weight: 500;
    font-style: normal;
    font-stretch: normal;
    src: url('fonts/EOT/SourceCodePro-Medium.eot') format('embedded-opentype'),
         url('fonts/WOFF2/OTF/SourceCodePro-Medium.otf.woff2') format('woff2'),
         url('fonts/WOFF/OTF/SourceCodePro-Medium.otf.woff') format('woff'),
         url('fonts/OTF/SourceCodePro-Medium.otf') format('opentype'),
         url('fonts/TTF/SourceCodePro-Medium.ttf') format('truetype');
}

@font-face{
    font-family: 'Source Code Pro';
    font-weight: 700;
    font-style: normal;
    font-stretch: normal;
    src: url('fonts/EOT/SourceCodePro-Bold.eot') format('embedded-opentype'),
         url('fonts/WOFF2/OTF/SourceCodePro-Bold.otf.woff2') format('woff2'),
         url('fonts/WOFF/OTF/SourceCodePro-Bold.otf.woff') format('woff'),
         url('fonts/OTF/SourceCodePro-Bold.otf') format('opentype'),
         url('fonts/TTF/SourceCodePro-Bold.ttf') format('truetype');
}

@font-face{
    font-family: 'Source Sans Pro';
    font-weight: 300;
    font-style: normal;
    font-stretch: normal;
    src: url('fonts/EOT/SourceSansPro-Light.eot') format('embedded-opentype'),
         url('fonts/WOFF/OTF/SourceSansPro-Light.otf.woff') format('woff'),
         url('fonts/OTF/SourceSansPro-Light.otf') format('opentype'),
         url('fonts/TTF/SourceSansPro-Light.ttf') format('truetype');
}

@font-face{
    font-family: 'Source Code Pro';
    font-weight: 900;
    font-style: normal;
    font-stretch: normal;
    src: url('fonts/EOT/SourceCodePro-Black.eot') format('embedded-opentype'),
         url('fonts/WOFF2/OTF/SourceCodePro-Black.otf.woff2') format('woff2'),
         url('fonts/WOFF/OTF/SourceCodePro-Black.otf.woff') format('woff'),
         url('fonts/OTF/SourceCodePro-Black.otf') format('opentype'),
         url('fonts/TTF/SourceCodePro-Black.ttf') format('truetype');
}





$base-font-family: 'Source Sans Pro', sans-serif;
$syntax-font-family: 'Source Code Pro', monospace;
$p-font-family: 'Source Sans Pro', sans-serif;



// This is my basic size, it is used as the main font size and *all* other things are scaled off it (except the gutter).
// The only number that is used outside of this file is zero.
$base: 20px;

// This is the value that defines the vertical rhythm for the whole document.
// All text sizes (except for the H1 and H2) share this spacing.
// H1 and H2 are too big and have double spacing, hence staying with the rhythm.
// In order to make it consistent it must be a px size.
// Normal zoom works fine with this.
// One compromise is that text-only zoom will be a disaster with this absolute line-height.
$line-height: round($base * 1.6);

// Gutter is the space from edge of screen. 
// Fixed to look neat on all sizes without wasting screen space.
// vspace is vertical and should be set to match the line-height in order to cerate a sconsistent vertical rhythm.
$gutter: 5px;
$vspace: $line-height;

// The max width for pure text content.
// I want roughly 60 characters per line for hard reading.
// Normal fonts have a height width raio of around 2.2:1
// The height is multiplied to achieve a rough CPL.
$reading-width: $base * 27;

// This is the max with for any content, including large images, code and titles.
// These kinds of content like to exploit as much space as possible.
// However using more than double the reading width looks clumsy and confusing.
$content-width: $reading-width * 2;

// Other text is things like bullets and blockquotes.
// Bullets enjoy longer lines, better flow, they already have visual aids to help the eye.
// Also gives space for the extra gutter parts of these elements.
$other-text-width: $reading-width * 1.5;

// Used for side information, such as post-date subtitle.
$small-font-size: $base * 0.9;

// Only 4 colours to edit to make a new theme.
$text-colour: #ddd;
$background-colour: #272822;
$highlight-colour: #fd971f; // This can be though of as the brand colour.
$link-colour: #a6e22e;

$link-hover-colour: $highlight-colour;

// These mixes may need tweaking on some themes.
$medium-colour: lighten($highlight-colour, 15%);
$light-colour: lighten($highlight-colour, 28%);
$subtle-back-colour: mix($highlight-colour, $background-colour, 10%);
$subtle-fore-colour: mix($highlight-colour, $text-colour, 50%);


// Some highly specific adjustments:
$header-underline: 1px;
$blockquote-side-line: round($base/2);
$site-footer-top-border: 1px;
$code-border-thickness: 1px;
$bullet-padding: $base;

$syntax-font-size: $base * 0.9; // Monospace fonts can appear large.
$small-art-size: round($base / 2.3);
$big-art-size: round($base * 1.3);

$header-border: 1px;
$header-shadow: 5px;

$h2-size: 1.5 * $base;
$h3-size: 1.5 * $base;
$h4-size: 1.2 * $base;
$h5-size: 1.0 * $base;
$h6-size: 1.0 * $base;

$h2-colour: mix($text-colour, $highlight-colour, 5%);
$h3-colour: mix($text-colour, $highlight-colour, 50%);
$h4-colour: mix($text-colour, $highlight-colour, 50%);
$h5-colour: mix($text-colour, $highlight-colour, 50%);
$h6-colour: mix($text-colour, $highlight-colour, 100%);

// Import partials from `sass_dir` (defaults to `_sass`)
// Imported in order where lower in the list overrides higher.
@import
        "normalize",
        "syntax",
        "style"
;